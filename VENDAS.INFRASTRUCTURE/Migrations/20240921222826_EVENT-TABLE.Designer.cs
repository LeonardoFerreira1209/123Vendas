// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VENDAS.INFRASTRUCTURE.Context;

#nullable disable

namespace VENDAS.INFRASTRUCTURE.Migrations
{
    [DbContext(typeof(SaleContext))]
    [Migration("20240921222826_EVENT-TABLE")]
    partial class EVENTTABLE
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VENDAS.DOMAIN.Entities.EventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("JsonBody")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Processed")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SchedulerTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Sended")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("VENDAS.DOMAIN.Entities.SaleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("VENDAS.DOMAIN.Entities.SaleEntity", b =>
                {
                    b.OwnsOne("VENDAS.DOMAIN.Entities.BranchEntity", "Branch", b1 =>
                        {
                            b1.Property<Guid>("SaleEntityId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Country")
                                .HasColumnType("longtext");

                            b1.Property<string>("Description")
                                .HasColumnType("longtext");

                            b1.Property<Guid>("Id")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Name")
                                .HasColumnType("longtext");

                            b1.HasKey("SaleEntityId");

                            b1.ToTable("Branchs", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("SaleEntityId");
                        });

                    b.OwnsOne("VENDAS.DOMAIN.Entities.ClientEntity", "Client", b1 =>
                        {
                            b1.Property<Guid>("SaleEntityId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Email")
                                .HasColumnType("longtext");

                            b1.Property<Guid>("Id")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Name")
                                .HasColumnType("longtext");

                            b1.HasKey("SaleEntityId");

                            b1.ToTable("Clients", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("SaleEntityId");
                        });

                    b.OwnsMany("VENDAS.DOMAIN.Entities.ProductEntity", "Products", b1 =>
                        {
                            b1.Property<Guid>("SaleEntityId")
                                .HasColumnType("char(36)");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("char(36)");

                            b1.Property<string>("Description")
                                .HasColumnType("longtext");

                            b1.Property<decimal>("Discount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Name")
                                .HasColumnType("longtext");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.Property<decimal>("TotalAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("UnitValue")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("SaleEntityId", "Id");

                            b1.ToTable("Products", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("SaleEntityId");
                        });

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
